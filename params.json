{"name":"Compaginator","tagline":"A framework agnostic JavaScript pagination component written in CoffeeScript.","body":"### Welcome to Compaginator\r\nA framework agnostic JavaScript pagination component written in CoffeeScript.\r\n\r\n### Philosophy\r\n\r\nCompaginator separates presentation from business logic in order to provide flexibility.  This is achieved by creating a single model that encapsulates the common pagination business logic, and then providing library/framework specific views for easy integration into existing code bases - regardless of underlying architecture.\r\n\r\nThis means that you should familiarise yourself with the core compaginator model, and then read the documentation relating to the view for your target library/framework.\r\n\r\n### Installation\r\n\r\nInclude the compaginator.min.js or compaginator.js file on your page.  \r\n\r\n```html\r\n<script type=\"text/javascript\" src=\"compaginator.min.js\"></script>\r\n```\r\n\r\n### Compaginator.Model\r\n\r\nThis class represents the core compaginator model.  The following methods form the public API for this class.\r\n\r\n| Method                       | Description\r\n|------------------------------|----------------------------------------\r\n| setCurrentPage(number)       | Set the current page of the paginator.\r\n| setNextPage()                | Set the next page as the current page.\r\n| setPrevPage()                | Set the prev page as the current page.\r\n| setNumPagesDisplayed(number) | Set the number of pages to be displayed when rendered.\r\n| setNumPagesAnchored(number)  | Set the number of pages to anchor at the start & end.\r\n| setNumPages(number)          | Set the total number of pages to paginate.\r\n| getCurrentPage()             | Returns the current page number.\r\n| getDisplayPages()            | Returns the subset of pages to render in the view.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}